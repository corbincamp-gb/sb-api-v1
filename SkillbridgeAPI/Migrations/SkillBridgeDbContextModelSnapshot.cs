// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SkillBridgeAPI.Data;

#nullable disable

namespace SkillBridgeAPI.Migrations
{
    [DbContext(typeof(SkillBridgeDbContext))]
    partial class SkillBridgeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetUserRoles_RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ActionModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<Guid?>("SyncGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ActionModel");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Agent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("IsOnPremise")
                        .HasColumnType("bit")
                        .HasColumnName("is_on_premise");

                    b.Property<DateTime?>("Lastalivetime")
                        .HasColumnType("datetime")
                        .HasColumnName("lastalivetime");

                    b.Property<string>("Name")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("name");

                    b.Property<byte[]>("PasswordHash")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("password_hash");

                    b.Property<byte[]>("PasswordSalt")
                        .HasMaxLength(256)
                        .HasColumnType("varbinary(256)")
                        .HasColumnName("password_salt");

                    b.Property<int?>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("state");

                    b.Property<Guid?>("Subscriptionid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("subscriptionid");

                    b.Property<string>("Version")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("PK__agent__3213E83F25CC6877");

                    b.HasIndex(new[] { "Subscriptionid", "Name" }, "IX_Agent_SubId_Name")
                        .IsUnique()
                        .HasFilter("[subscriptionid] IS NOT NULL AND [name] IS NOT NULL");

                    b.ToTable("agent", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AgentInstance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("Agentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("agentid");

                    b.Property<DateTime?>("Lastalivetime")
                        .HasColumnType("datetime")
                        .HasColumnName("lastalivetime");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("PK__agent_in__3213E83F88F6C2A7");

                    b.HasIndex("Agentid");

                    b.ToTable("agent_instance", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AgentVersion", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("ExpiresOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValue(new DateTime(9999, 12, 31, 23, 59, 59, 997, DateTimeKind.Unspecified));

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__agent_ve__3214EC07C2508AA3");

                    b.HasIndex(new[] { "Version" }, "UQ__agent_ve__0F540134A7F387AA")
                        .IsUnique();

                    b.ToTable("agent_version", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Apistate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ExpiresIn")
                        .HasColumnType("int");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("APIState", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedName" }, "RoleNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedName] IS NOT NULL)");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetRoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "RoleId" }, "IX_AspNetRoleClaims_RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("MustChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NormalizedEmail" }, "EmailIndex");

                    b.HasIndex(new[] { "NormalizedUserName" }, "UserNameIndex")
                        .IsUnique()
                        .HasFilter("([NormalizedUserName] IS NOT NULL)");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetUserAuthority", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationUserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("ProgramId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ProgramId");

                    b.ToTable("AspNetUserAuthorities");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetUserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserClaims_UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetUserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex(new[] { "UserId" }, "IX_AspNetUserLogins_UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetUserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("AuditDateTimeUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("AuditType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedColumns")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OldValues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TableName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Audits");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ConfigValue")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.HasKey("Id")
                        .HasName("PK__configur__3214EC0732B9447E");

                    b.ToTable("configuration", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.DeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DeliveryMethods");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.EmailLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("SendDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SendFrom")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SendTo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("EmailLogs");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address2")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Ein")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("EntryStatusId")
                        .HasColumnType("int")
                        .HasColumnName("EntryStatusID");

                    b.Property<string>("ExternalNotes")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("InternalNotes")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<byte>("NumberOfPrograms")
                        .HasColumnType("tinyint");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PocEmail")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("");

                    b.Property<string>("PocFirstName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("");

                    b.Property<string>("PocLastName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("");

                    b.Property<string>("PocPhoneNumber")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("");

                    b.Property<string>("PocTitle")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasDefaultValue("");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<bool>("ReviewedByAnalyst")
                        .HasColumnType("bit");

                    b.Property<bool>("ReviewedByOsd")
                        .HasColumnType("bit");

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("StateID");

                    b.Property<DateTime?>("SubmissionDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ZohoTicketId")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("ZohoTicketID");

                    b.HasKey("Id")
                        .HasName("PK__Entries__3214EC276A234091");

                    b.HasIndex("StateId");

                    b.ToTable("Entries");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.EntryStatusTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("EntryId")
                        .HasColumnType("int")
                        .HasColumnName("EntryID");

                    b.Property<int>("NewEntryStatusId")
                        .HasColumnType("int")
                        .HasColumnName("NewEntryStatusID");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OldEntryStatusId")
                        .HasColumnType("int")
                        .HasColumnName("OldEntryStatusID");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id")
                        .HasName("PK__EntrySta__3214EC2778DF6B4D");

                    b.HasIndex("EntryId");

                    b.ToTable("EntryStatusTracking", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.EnumType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("EnumId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__EnumType__3214EC0722AC1444");

                    b.ToTable("EnumType", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("Blob")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("ContentLength")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("EntryId")
                        .HasColumnType("int")
                        .HasColumnName("EntryID");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Files__3214EC27E6E24DA3");

                    b.HasIndex("EntryId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("EntryId")
                        .HasColumnType("int")
                        .HasColumnName("EntryID");

                    b.Property<int>("FormOrder")
                        .HasColumnType("int");

                    b.Property<int>("FormTemplateId")
                        .HasColumnType("int")
                        .HasColumnName("FormTemplateID");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Forms__3214EC27BB5FE2BB");

                    b.HasIndex("EntryId");

                    b.HasIndex("FormTemplateId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FormResponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Answer")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("FormId")
                        .HasColumnType("int")
                        .HasColumnName("FormID");

                    b.Property<bool>("IsResponseRequired")
                        .HasColumnType("bit");

                    b.Property<int>("PartId")
                        .HasColumnType("int")
                        .HasColumnName("PartID");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    b.Property<int>("SectionId")
                        .HasColumnType("int")
                        .HasColumnName("SectionID");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__FormResp__3214EC27175BD260");

                    b.HasIndex("FormId");

                    b.ToTable("FormResponses");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FormResponseChoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("AnswerChoiceId")
                        .HasColumnType("int")
                        .HasColumnName("AnswerChoiceID");

                    b.Property<int>("FormResponseId")
                        .HasColumnType("int")
                        .HasColumnName("FormResponseID");

                    b.HasKey("Id")
                        .HasName("PK__FormResp__3214EC2726D32332");

                    b.HasIndex("FormResponseId");

                    b.ToTable("FormResponseChoices");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FormResponseFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("FileId")
                        .HasColumnType("int")
                        .HasColumnName("FileID");

                    b.Property<int>("FormResponseId")
                        .HasColumnType("int")
                        .HasColumnName("FormResponseID");

                    b.HasKey("Id")
                        .HasName("PK__FormResp__3214EC27B8EE55A1");

                    b.HasIndex("FileId");

                    b.HasIndex("FormResponseId");

                    b.ToTable("FormResponseFiles");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FormResponseRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Answer")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("ColumnId")
                        .HasColumnType("int")
                        .HasColumnName("ColumnID");

                    b.Property<int>("FormResponseId")
                        .HasColumnType("int")
                        .HasColumnName("FormResponseID");

                    b.Property<int>("RowId")
                        .HasColumnType("int")
                        .HasColumnName("RowID");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__FormResp__3214EC2749EAE2BA");

                    b.HasIndex("FormResponseId");

                    b.ToTable("FormResponseRows");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FormTemplate", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("AddedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("RetiredDate")
                        .HasColumnType("datetime");

                    b.Property<string>("SerializedFormTemplate")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<byte>("TemplateTypeId")
                        .HasColumnType("tinyint")
                        .HasColumnName("TemplateTypeID");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__FormTemp__3214EC2775CD995E");

                    b.ToTable("FormTemplates");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.HtmlText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Html")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("HTML");

                    b.Property<DateTime?>("ModifyDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__HtmlText__3214EC07174C01A2");

                    b.ToTable("HtmlText", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.InstructionalMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOther")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InstructionalMethods");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Job", b =>
                {
                    b.Property<Guid>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("CompletedTaskCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("InitialInsertTimeUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("InitialInsertTimeUTC")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("InputData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCancelled")
                        .HasColumnType("bit");

                    b.Property<int>("JobType")
                        .HasColumnType("int");

                    b.Property<int>("TaskCount")
                        .HasColumnType("int");

                    b.Property<Guid?>("TracingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("JobId")
                        .HasName("PK__Job__056690C2E81B322D");

                    b.HasIndex(new[] { "IsCancelled" }, "index_job_iscancelled");

                    b.ToTable("Job", "TaskHosting");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.JobFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobFamilies");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.MessageQueue", b =>
                {
                    b.Property<Guid>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<byte>("ExecTimes")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("InitialInsertTimeUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("InitialInsertTimeUTC")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime>("InsertTimeUtc")
                        .HasColumnType("datetime")
                        .HasColumnName("InsertTimeUTC");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MessageData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageType")
                        .HasColumnType("int");

                    b.Property<Guid?>("QueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ResetTimes")
                        .HasColumnType("int");

                    b.Property<Guid?>("TracingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateTimeUtc")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdateTimeUTC");

                    b.Property<long>("Version")
                        .HasColumnType("bigint");

                    b.Property<Guid?>("WorkerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MessageId")
                        .HasName("PK__MessageQ__C87C0C9C6BDFABD0");

                    b.HasIndex(new[] { "QueueId", "UpdateTimeUtc", "InsertTimeUtc", "ExecTimes", "Version" }, "index_messagequeue_getnextmessage");

                    b.HasIndex(new[] { "QueueId", "MessageType", "UpdateTimeUtc", "InsertTimeUtc", "ExecTimes", "Version" }, "index_messagequeue_getnextmessagebytype");

                    b.HasIndex(new[] { "JobId" }, "index_messagequeue_jobid");

                    b.ToTable("MessageQueue", "TaskHosting");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.MetaInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("Timestamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<long?>("Version")
                        .HasColumnType("bigint");

                    b.Property<int>("VersionBuild")
                        .HasColumnType("int");

                    b.Property<int>("VersionMajor")
                        .HasColumnType("int");

                    b.Property<int>("VersionMinor")
                        .HasColumnType("int");

                    b.Property<int>("VersionService")
                        .HasColumnType("int");

                    b.Property<string>("VersionString")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("1.0.0.0");

                    b.HasKey("Id")
                        .HasName("PK__MetaInfo__3214EC0769EE8144");

                    b.ToTable("MetaInformation", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.MouFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Blob")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("ContentLength")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("MouId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MouId");

                    b.ToTable("MouFiles");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.MouModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Creation_Date");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Expiration_Date");

                    b.Property<DateTime>("ExtensionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("ExtensionDate");

                    b.Property<bool>("IsOsd")
                        .HasColumnType("bit")
                        .HasColumnName("Is_OSD");

                    b.Property<int>("LegacyProviderId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Provider_Id");

                    b.Property<DateTime?>("NotificationDate30Days")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NotificationDate60Days")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("NotificationDate90Days")
                        .HasColumnType("datetime");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Organization_Name");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZohoTicketId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Mous");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.OpportunityGroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<int>("OpportunityId")
                        .HasColumnType("int");

                    b.Property<int?>("OpportunityIdNavigationId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OpportunityIdNavigationId");

                    b.ToTable("OpportunityGroups");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.OpportunityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminPocEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_Email");

                    b.Property<string>("AdminPocFirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_First_Name");

                    b.Property<string>("AdminPocLastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_Last_Name");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime>("DateDeactivated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Deactivated");

                    b.Property<DateTime>("DateProgramInitiated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Program_Initiated");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Updated");

                    b.Property<string>("DeliveryMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Delivery_Method");

                    b.Property<string>("EmployerPocEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Employer_Poc_Email");

                    b.Property<string>("EmployerPocName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Employer_Poc_Name");

                    b.Property<string>("EnrollmentDates")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Enrollment_Dates");

                    b.Property<bool>("ForSpouses")
                        .HasColumnType("bit")
                        .HasColumnName("For_Spouses");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("Group_Id");

                    b.Property<string>("Installation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<string>("JobFamilies")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Job_Families");

                    b.Property<string>("JobsDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Jobs_Description");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<int>("LegacyOpportunityId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Opportunity_Id");

                    b.Property<int>("LegacyProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Program_Id");

                    b.Property<int>("LegacyProviderId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Provider_Id");

                    b.Property<string>("LinksToProspectiveJobs")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Links_To_Prospective_Jobs");

                    b.Property<string>("LocationsOfProspectiveJobsByState")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Locations_Of_Prospective_Jobs_By_State");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<DateTime>("MouExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Mou_Expiration_Date");

                    b.Property<string>("MouLink")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mou_Link");

                    b.Property<bool>("Mous")
                        .HasColumnType("bit");

                    b.Property<bool>("MultipleLocations")
                        .HasColumnType("bit")
                        .HasColumnName("Multiple_Locations");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumLocations")
                        .HasColumnType("int")
                        .HasColumnName("Num_Locations");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<string>("OpportunityUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Opportunity_Url");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("Organization_Id");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Organization_Name");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherEligibilityFactors")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Other_Eligibility_Factors");

                    b.Property<string>("ParticipationPopulations")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Participation_Populations");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Name");

                    b.Property<string>("ProgramType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Type");

                    b.Property<string>("ProspectiveJobLaborDemand")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Prospective_Job_Labor_Demand");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummaryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Summary_Description");

                    b.Property<bool>("SupportCohorts")
                        .HasColumnType("bit")
                        .HasColumnName("Support_Cohorts");

                    b.Property<string>("TargetMocs")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Target_Mocs");

                    b.Property<string>("TrainingDuration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Training_Duration");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Updated_By");

                    b.Property<string>("Zip")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opportunities");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.OrganizationFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Blob")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<long>("ContentLength")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("OrganizationFiles");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.OrganizationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime>("DateDeactivated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Deactivated");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<bool>("IsMouParent")
                        .HasColumnType("bit")
                        .HasColumnName("Is_MOU_Parent");

                    b.Property<int>("LegacyMouId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_MOU_Id");

                    b.Property<int>("LegacyProviderId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Provider_Id");

                    b.Property<int>("MouId")
                        .HasColumnType("int")
                        .HasColumnName("Mou_Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationType")
                        .HasColumnType("int")
                        .HasColumnName("Organization_Type");

                    b.Property<string>("OrganizationUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Organization_Url");

                    b.Property<string>("ParentOrganizationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Parent_Organization_Name");

                    b.Property<string>("PocEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Poc_Email");

                    b.Property<string>("PocFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Poc_First_Name");

                    b.Property<string>("PocLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Poc_Last_Name");

                    b.Property<string>("PocPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Poc_Phone");

                    b.Property<string>("StatesOfProgramDelivery")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("States_Of_Program_Delivery");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ParticipationPopulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ParticipationPopulations");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingOpportunityAddition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime>("DateProgramInitiated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Program_Initiated");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Updated");

                    b.Property<string>("DeliveryMethod")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Delivery_Method");

                    b.Property<string>("EmployerPocEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Employer_Poc_Email");

                    b.Property<string>("EmployerPocName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Employer_Poc_Name");

                    b.Property<string>("EnrollmentDates")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Enrollment_Dates");

                    b.Property<bool>("ForSpouses")
                        .HasColumnType("bit")
                        .HasColumnName("For_Spouses");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("Group_Id");

                    b.Property<string>("Installation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<string>("JobFamilies")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Job_Families");

                    b.Property<string>("JobsDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Jobs_Description");

                    b.Property<DateTime?>("LastAdminActionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last_Admin_Action_Time");

                    b.Property<string>("LastAdminActionType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Last_Admin_Action_Type");

                    b.Property<string>("LastAdminActionUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Last_Admin_Action_User");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<int>("LegacyOpportunityId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Opportunity_Id");

                    b.Property<int>("LegacyProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Program_Id");

                    b.Property<int>("LegacyProviderId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Provider_Id");

                    b.Property<string>("LinksToProspectiveJobs")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Links_To_Prospective_Jobs");

                    b.Property<string>("LocationsOfProspectiveJobsByState")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Locations_Of_Prospective_Jobs_By_State");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<bool>("Mous")
                        .HasColumnType("bit");

                    b.Property<bool>("MultipleLocations")
                        .HasColumnType("bit")
                        .HasColumnName("Multiple_Locations");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumLocations")
                        .HasColumnType("int")
                        .HasColumnName("Num_Locations");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<int>("OpportunityId")
                        .HasColumnType("int")
                        .HasColumnName("Opportunity_Id");

                    b.Property<string>("OpportunityUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Opportunity_Url");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("Organization_Id");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherEligibilityFactors")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Other_Eligibility_Factors");

                    b.Property<string>("ParticipationPopulations")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Participation_Populations");

                    b.Property<int>("PendingChangeStatus")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Change_Status");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.Property<string>("ProgramName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Name");

                    b.Property<string>("ProgramType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Type");

                    b.Property<string>("ProspectiveJobLaborDemand")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Prospective_Job_Labor_Demand");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Rejection_Reason");

                    b.Property<bool>("RequiresOsdReview")
                        .HasColumnType("bit")
                        .HasColumnName("Requires_OSD_Review");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummaryDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Summary_Description");

                    b.Property<bool>("SupportCohorts")
                        .HasColumnType("bit")
                        .HasColumnName("Support_Cohorts");

                    b.Property<string>("TargetMocs")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Target_Mocs");

                    b.Property<string>("TrainingDuration")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Training_Duration");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Updated_By");

                    b.Property<string>("Zip")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("PendingOpportunityAdditions");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingOpportunityChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime>("DateProgramInitiated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Program_Initiated");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Updated");

                    b.Property<string>("DeliveryMethod")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Delivery_Method");

                    b.Property<string>("EmployerPocEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Employer_Poc_Email");

                    b.Property<string>("EmployerPocName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Employer_Poc_Name");

                    b.Property<string>("EnrollmentDates")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Enrollment_Dates");

                    b.Property<bool>("ForSpouses")
                        .HasColumnType("bit")
                        .HasColumnName("For_Spouses");

                    b.Property<int>("GroupId")
                        .HasColumnType("int")
                        .HasColumnName("Group_Id");

                    b.Property<string>("Installation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<string>("JobFamilies")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Job_Families");

                    b.Property<string>("JobsDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Jobs_Description");

                    b.Property<DateTime?>("LastAdminActionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last_Admin_Action_Time");

                    b.Property<string>("LastAdminActionType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Last_Admin_Action_Type");

                    b.Property<string>("LastAdminActionUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Last_Admin_Action_User");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<int>("LegacyOpportunityId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Opportunity_Id");

                    b.Property<int>("LegacyProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Program_Id");

                    b.Property<int>("LegacyProviderId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Provider_Id");

                    b.Property<string>("LinksToProspectiveJobs")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Links_To_Prospective_Jobs");

                    b.Property<string>("LocationsOfProspectiveJobsByState")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Locations_Of_Prospective_Jobs_By_State");

                    b.Property<double>("Long")
                        .HasColumnType("float");

                    b.Property<bool>("Mous")
                        .HasColumnType("bit");

                    b.Property<bool>("MultipleLocations")
                        .HasColumnType("bit")
                        .HasColumnName("Multiple_Locations");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumLocations")
                        .HasColumnType("int")
                        .HasColumnName("Num_Locations");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<int>("OpportunityId")
                        .HasColumnType("int")
                        .HasColumnName("Opportunity_Id");

                    b.Property<string>("OpportunityUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Opportunity_Url");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("Organization_Id");

                    b.Property<string>("Other")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherEligibilityFactors")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Other_Eligibility_Factors");

                    b.Property<string>("ParticipationPopulations")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Participation_Populations");

                    b.Property<int>("PendingChangeStatus")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Change_Status");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.Property<string>("ProgramName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Name");

                    b.Property<string>("ProgramType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Type");

                    b.Property<string>("ProspectiveJobLaborDemand")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Prospective_Job_Labor_Demand");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Rejection_Reason");

                    b.Property<bool>("RequiresOsdReview")
                        .HasColumnType("bit")
                        .HasColumnName("Requires_OSD_Review");

                    b.Property<string>("Salary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SummaryDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Summary_Description");

                    b.Property<bool>("SupportCohorts")
                        .HasColumnType("bit")
                        .HasColumnName("Support_Cohorts");

                    b.Property<string>("TargetMocs")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Target_Mocs");

                    b.Property<string>("TrainingDuration")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Training_Duration");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Updated_By");

                    b.Property<string>("Zip")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("PendingOpportunityChanges");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingOrganizationChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Updated");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<DateTime?>("LastAdminActionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last_Admin_Action_Time");

                    b.Property<string>("LastAdminActionType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Last_Admin_Action_Type");

                    b.Property<string>("LastAdminActionUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Last_Admin_Action_User");

                    b.Property<int>("LegacyProviderId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Provider_Id");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("Organization_Id");

                    b.Property<int>("OrganizationType")
                        .HasColumnType("int")
                        .HasColumnName("Organization_Type");

                    b.Property<string>("OrganizationUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Organization_Url");

                    b.Property<int>("PendingChangeStatus")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Change_Status");

                    b.Property<string>("PocEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Poc_Email");

                    b.Property<string>("PocFirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Poc_First_Name");

                    b.Property<string>("PocLastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Poc_Last_Name");

                    b.Property<string>("PocPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Poc_Phone");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Rejection_Reason");

                    b.Property<bool>("RequiresOsdReview")
                        .HasColumnType("bit")
                        .HasColumnName("Requires_OSD_Review");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.ToTable("PendingOrganizationChanges");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingProgramAddition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminPocEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_Email");

                    b.Property<string>("AdminPocFirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_First_Name");

                    b.Property<string>("AdminPocLastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_Last_Name");

                    b.Property<string>("AdminPocPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_Phone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateAuthorized")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Authorized");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Updated");

                    b.Property<string>("DeliveryMethod")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Delivery_Method");

                    b.Property<string>("EnrollmentDates")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Enrollment_Dates");

                    b.Property<bool>("ForSpouses")
                        .HasColumnType("bit")
                        .HasColumnName("For_Spouses");

                    b.Property<bool>("HasConsent")
                        .HasColumnType("bit")
                        .HasColumnName("Has_Consent");

                    b.Property<bool>("HasIntake")
                        .HasColumnType("bit")
                        .HasColumnName("Has_Intake");

                    b.Property<bool>("HasMultipleLocations")
                        .HasColumnType("bit")
                        .HasColumnName("Has_Multiple_Locations");

                    b.Property<string>("IntakeFormVersion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Intake_Form_Version");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<string>("JobFamily")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Job_Family");

                    b.Property<DateTime?>("LastAdminActionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last_Admin_Action_Time");

                    b.Property<string>("LastAdminActionType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Last_Admin_Action_Type");

                    b.Property<string>("LastAdminActionUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Last_Admin_Action_User");

                    b.Property<int>("LegacyProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Program_Id");

                    b.Property<int>("LegacyProviderId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Provider_Id");

                    b.Property<string>("LhnIntakeTicketId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Lhn_Intake_Ticket_Id");

                    b.Property<string>("LhnLocationTicketId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Lhn_Location_Ticket_Id");

                    b.Property<bool>("LocationDetailsAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("Location_Details_Available");

                    b.Property<DateTime>("MouCreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Mou_Creation_Date");

                    b.Property<DateTime>("MouExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Mou_Expiration_Date");

                    b.Property<string>("MouLink")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mou_Link");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<string>("OpportunityType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Opportunity_Type");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("Organization_Id");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Organization_Name");

                    b.Property<string>("ParticipationPopulations")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Participation_Populations");

                    b.Property<int>("PendingChangeStatus")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Change_Status");

                    b.Property<int>("ProgramDuration")
                        .HasColumnType("int")
                        .HasColumnName("Program_Duration");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.Property<string>("ProgramName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Name");

                    b.Property<bool>("ProgramStatus")
                        .HasColumnType("bit")
                        .HasColumnName("Program_Status");

                    b.Property<string>("ProgramUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Url");

                    b.Property<string>("PublicPocEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Public_Poc_Email");

                    b.Property<string>("PublicPocName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Public_Poc_Name");

                    b.Property<string>("QpIntakeSubmissionId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Qp_Intake_Submission_Id");

                    b.Property<string>("QpLocationSubmissionId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Qp_Location_Submission_Id");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Rejection_Reason");

                    b.Property<bool>("ReportingForm2020")
                        .HasColumnType("bit")
                        .HasColumnName("Reporting_Form_2020");

                    b.Property<bool>("RequiresOsdReview")
                        .HasColumnType("bit")
                        .HasColumnName("Requires_OSD_Review");

                    b.Property<string>("SerializedTrainingPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicesSupported")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Services_Supported");

                    b.Property<string>("StatesOfProgramDelivery")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("States_Of_Program_Delivery");

                    b.Property<bool>("SupportCohorts")
                        .HasColumnType("bit")
                        .HasColumnName("Support_Cohorts");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramAdditions");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingProgramAdditionsDeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeliveryMethodId")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_Method_Id");

                    b.Property<int>("PendingProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Program_Id");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramAdditionsDeliveryMethod", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingProgramAdditionsJobFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("JobFamilyId")
                        .HasColumnType("int")
                        .HasColumnName("Job_Family_Id");

                    b.Property<int>("PendingProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Program_Id");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramAdditionsJobFamily", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingProgramAdditionsParticipationPopulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ParticipationPopulationId")
                        .HasColumnType("int")
                        .HasColumnName("Participation_Population_Id");

                    b.Property<int>("PendingProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Program_Id");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramAdditionsParticipationPopulation", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingProgramAdditionsService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PendingProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Program_Id");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("Service_Id");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramAdditionsService", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingProgramChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminPocEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_Email");

                    b.Property<string>("AdminPocFirstName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_First_Name");

                    b.Property<string>("AdminPocLastName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_Last_Name");

                    b.Property<string>("AdminPocPhone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_Phone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateAuthorized")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Authorized");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Updated");

                    b.Property<int>("DeliveryMethod")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_Method");

                    b.Property<string>("EnrollmentDates")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Enrollment_Dates");

                    b.Property<bool>("ForSpouses")
                        .HasColumnType("bit")
                        .HasColumnName("For_Spouses");

                    b.Property<bool>("HasConsent")
                        .HasColumnType("bit")
                        .HasColumnName("Has_Consent");

                    b.Property<bool>("HasIntake")
                        .HasColumnType("bit")
                        .HasColumnName("Has_Intake");

                    b.Property<bool>("HasMultipleLocations")
                        .HasColumnType("bit")
                        .HasColumnName("Has_Multiple_Locations");

                    b.Property<string>("IntakeFormVersion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Intake_Form_Version");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<string>("JobFamily")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Job_Family");

                    b.Property<DateTime?>("LastAdminActionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Last_Admin_Action_Time");

                    b.Property<string>("LastAdminActionType")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Last_Admin_Action_Type");

                    b.Property<string>("LastAdminActionUser")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Last_Admin_Action_User");

                    b.Property<int>("LegacyProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Program_Id");

                    b.Property<int>("LegacyProviderId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Provider_Id");

                    b.Property<string>("LhnIntakeTicketId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Lhn_Intake_Ticket_Id");

                    b.Property<string>("LhnLocationTicketId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Lhn_Location_Ticket_Id");

                    b.Property<bool>("LocationDetailsAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("Location_Details_Available");

                    b.Property<DateTime>("MouCreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Mou_Creation_Date");

                    b.Property<DateTime>("MouExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Mou_Expiration_Date");

                    b.Property<string>("MouLink")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mou_Link");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<string>("OpportunityType")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Opportunity_Type");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("Organization_Id");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Organization_Name");

                    b.Property<string>("OtherDescription")
                        .HasColumnType("text")
                        .HasColumnName("Other_Description");

                    b.Property<string>("ParticipationPopulations")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Participation_Populations");

                    b.Property<int>("PendingChangeStatus")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Change_Status");

                    b.Property<int>("ProgramDuration")
                        .HasColumnType("int")
                        .HasColumnName("Program_Duration");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.Property<string>("ProgramName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Name");

                    b.Property<bool>("ProgramStatus")
                        .HasColumnType("bit")
                        .HasColumnName("Program_Status");

                    b.Property<string>("ProgramUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Url");

                    b.Property<string>("PublicPocEmail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Public_Poc_Email");

                    b.Property<string>("PublicPocName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Public_Poc_Name");

                    b.Property<string>("QpIntakeSubmissionId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Qp_Intake_Submission_Id");

                    b.Property<string>("QpLocationSubmissionId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Qp_Location_Submission_Id");

                    b.Property<string>("RejectionReason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Rejection_Reason");

                    b.Property<bool>("ReportingForm2020")
                        .HasColumnType("bit")
                        .HasColumnName("Reporting_Form_2020");

                    b.Property<bool>("RequiresOsdReview")
                        .HasColumnType("bit")
                        .HasColumnName("Requires_OSD_Review");

                    b.Property<string>("SerializedTrainingPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServicesSupported")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Services_Supported");

                    b.Property<string>("StatesOfProgramDelivery")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("States_Of_Program_Delivery");

                    b.Property<bool>("SupportCohorts")
                        .HasColumnType("bit")
                        .HasColumnName("Support_Cohorts");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramChanges");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingProgramDeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeliveryMethodId")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_Method_Id");

                    b.Property<int>("PendingProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Program_Id");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramDeliveryMethod", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingProgramJobFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("JobFamilyId")
                        .HasColumnType("int")
                        .HasColumnName("Job_Family_Id");

                    b.Property<int>("PendingProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Program_Id");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramJobFamily", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingProgramParticipationPopulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ParticipationPopulationId")
                        .HasColumnType("int")
                        .HasColumnName("Participation_Population_Id");

                    b.Property<int>("PendingProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Program_Id");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramParticipationPopulation", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingProgramService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PendingProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Program_Id");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("Service_Id");

                    b.HasKey("Id");

                    b.ToTable("PendingProgramService", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.PendingProgramServiceOld", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("PendingProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Pending_Program_Id");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("Service_Id");

                    b.ToTable("PendingProgramServiceOLD", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ProgramDeliveryMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeliveryMethodId")
                        .HasColumnType("int")
                        .HasColumnName("Delivery_Method_Id");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.HasKey("Id");

                    b.ToTable("ProgramDeliveryMethod", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ProgramJobFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("JobFamilyId")
                        .HasColumnType("int")
                        .HasColumnName("Job_Family_Id");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.HasKey("Id");

                    b.ToTable("ProgramJobFamily", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ProgramModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdminPocEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_Email");

                    b.Property<string>("AdminPocFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_First_Name");

                    b.Property<string>("AdminPocLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_Last_Name");

                    b.Property<string>("AdminPocPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Admin_Poc_Phone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Created_By");

                    b.Property<DateTime>("DateAuthorized")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Authorized");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Created");

                    b.Property<DateTime>("DateDeactivated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Deactivated");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date_Updated");

                    b.Property<string>("DeliveryMethod")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Delivery_Method");

                    b.Property<string>("EnrollmentDates")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Enrollment_Dates");

                    b.Property<bool>("ForSpouses")
                        .HasColumnType("bit")
                        .HasColumnName("For_Spouses");

                    b.Property<bool>("HasConsent")
                        .HasColumnType("bit")
                        .HasColumnName("Has_Consent");

                    b.Property<bool>("HasIntake")
                        .HasColumnType("bit")
                        .HasColumnName("Has_Intake");

                    b.Property<bool>("HasMultipleLocations")
                        .HasColumnType("bit")
                        .HasColumnName("Has_Multiple_Locations");

                    b.Property<string>("IntakeFormVersion")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Intake_Form_Version");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("Is_Active");

                    b.Property<string>("JobFamily")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Job_Family");

                    b.Property<int>("LegacyProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Program_Id");

                    b.Property<int>("LegacyProviderId")
                        .HasColumnType("int")
                        .HasColumnName("Legacy_Provider_Id");

                    b.Property<string>("LhnIntakeTicketId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Lhn_Intake_Ticket_Id");

                    b.Property<string>("LhnLocationTicketId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Lhn_Location_Ticket_Id");

                    b.Property<bool>("LocationDetailsAvailable")
                        .HasColumnType("bit")
                        .HasColumnName("Location_Details_Available");

                    b.Property<DateTime>("MouCreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Mou_Creation_Date");

                    b.Property<DateTime>("MouExpirationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Mou_Expiration_Date");

                    b.Property<string>("MouLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Mou_Link");

                    b.Property<bool>("Nationwide")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Online")
                        .HasColumnType("bit");

                    b.Property<string>("OpportunityType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Opportunity_Type");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("Organization_Id");

                    b.Property<string>("OrganizationName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Organization_Name");

                    b.Property<string>("OtherDescription")
                        .HasColumnType("text")
                        .HasColumnName("Other_Description");

                    b.Property<string>("ParticipationPopulations")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Participation_Populations");

                    b.Property<int>("ProgramDuration")
                        .HasColumnType("int")
                        .HasColumnName("Program_Duration");

                    b.Property<string>("ProgramName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Name");

                    b.Property<bool>("ProgramStatus")
                        .HasColumnType("bit")
                        .HasColumnName("Program_Status");

                    b.Property<string>("ProgramUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Program_Url");

                    b.Property<string>("PublicPocEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Public_Poc_Email");

                    b.Property<string>("PublicPocName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Public_Poc_Name");

                    b.Property<string>("QpIntakeSubmissionId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Qp_Intake_Submission_Id");

                    b.Property<string>("QpLocationSubmissionId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Qp_Location_Submission_Id");

                    b.Property<bool>("ReportingForm2020")
                        .HasColumnType("bit")
                        .HasColumnName("Reporting_Form_2020");

                    b.Property<string>("ServicesSupported")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Services_Supported");

                    b.Property<string>("StatesOfProgramDelivery")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("States_Of_Program_Delivery");

                    b.Property<bool>("SupportCohorts")
                        .HasColumnType("bit")
                        .HasColumnName("Support_Cohorts");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Updated_By");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ProgramParticipationPopulation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ParticipationPopulationId")
                        .HasColumnType("int")
                        .HasColumnName("Participation_Population_Id");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.HasKey("Id");

                    b.ToTable("ProgramParticipationPopulation", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ProgramService", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("Service_Id");

                    b.HasKey("Id");

                    b.ToTable("ProgramService", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ProgramServiceOld", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("Service_Id");

                    b.ToTable("ProgramServiceOLD", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ProgramState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProgramId")
                        .HasColumnType("int")
                        .HasColumnName("Program_Id");

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("State_Id");

                    b.HasKey("Id");

                    b.ToTable("ProgramStates");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ProgramTrainingPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ActivationChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<int>("TrainingPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProgramId");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("ProgramTrainingPlans");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Qppdf", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<byte[]>("Pdf")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.Property<string>("ZohoTicketId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("QPPdfs", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Qpresponse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Duplicate")
                        .HasColumnType("bit");

                    b.Property<string>("ExternalReference")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("ImportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.Property<string>("ResponseStatus")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<string>("SurveyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TimeStamp")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TimeTaken")
                        .HasColumnType("int");

                    b.Property<string>("ZohoTicketId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("QPResponses", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.QpresponseQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("QuestionCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("QuestionDescription")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("QPResponseQuestions", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.QpresponseQuestionAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.Property<int>("SurveyId")
                        .HasColumnType("int");

                    b.Property<string>("ValueDynamicExplodeText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueFileLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueResult")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueScale")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ValueText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ValueWeight")
                        .HasColumnType("decimal(4, 2)");

                    b.HasKey("Id");

                    b.ToTable("QPResponseQuestionAnswers", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Scaleunitlimit", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int>("MaxValue")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__scaleuni__3214EC07BDC381AB");

                    b.ToTable("scaleunitlimits", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Schedule", b =>
                {
                    b.Property<int>("ScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScheduleId"));

                    b.Property<int>("FreqInterval")
                        .HasColumnType("int");

                    b.Property<int>("FreqType")
                        .HasColumnType("int");

                    b.HasKey("ScheduleId")
                        .HasName("PK__Schedule__9C8A5B4966A3BAF5");

                    b.ToTable("Schedule", "TaskHosting");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ScheduleTask", b =>
                {
                    b.Property<Guid>("SyncGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("DequeueCount")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<long>("Interval")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("PopReceipt")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte>("State")
                        .HasColumnType("tinyint");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("SyncGroupId");

                    b.ToTable("ScheduleTask", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ScheduleTask1", b =>
                {
                    b.Property<Guid>("ScheduleTaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("NextRunTime")
                        .HasColumnType("datetime");

                    b.Property<Guid>("QueueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Schedule")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("TaskInput")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("TaskType")
                        .HasColumnType("int");

                    b.Property<Guid>("TracingId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ScheduleTaskId")
                        .HasName("PK__Schedule__8DAD173AC8829423");

                    b.HasIndex("Schedule");

                    b.HasIndex(new[] { "MessageId" }, "ScheduleTask_MessageId_Index");

                    b.ToTable("ScheduleTask", "TaskHosting");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Service", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToTable("Services");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.SiteConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("NotificationHtml")
                        .HasColumnType("text")
                        .HasColumnName("NotificationHTML");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.ToTable("SiteConfiguration", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime?>("Creationtime")
                        .HasColumnType("datetime")
                        .HasColumnName("creationtime");

                    b.Property<bool?>("EnableDetailedProviderTracing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("Lastlogintime")
                        .HasColumnType("datetime")
                        .HasColumnName("lastlogintime");

                    b.Property<string>("Name")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("name");

                    b.Property<int?>("Policyid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("policyid");

                    b.Property<byte>("Subscriptionstate")
                        .HasColumnType("tinyint")
                        .HasColumnName("subscriptionstate");

                    b.Property<string>("Syncserveruniquename")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("syncserveruniquename");

                    b.Property<int>("Tombstoneretentionperiodindays")
                        .HasColumnType("int")
                        .HasColumnName("tombstoneretentionperiodindays");

                    b.Property<string>("Version")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("version");

                    b.Property<Guid?>("WindowsAzureSubscriptionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id")
                        .HasName("PK__subscrip__3213E83F5D4D52C4");

                    b.HasIndex(new[] { "Syncserveruniquename" }, "IX_SyncServerUniqueName")
                        .IsUnique()
                        .HasFilter("([syncserveruniquename] IS NOT NULL)");

                    b.ToTable("subscription", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.SyncObjectDatum", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DataType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<DateTime?>("DroppedTime")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("LastModified")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<byte[]>("ObjectData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ObjectId", "DataType")
                        .HasName("PK_SyncObjectExtInfo");

                    b.ToTable("SyncObjectData", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Syncgroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("ConflictLoggingEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("ConflictResolutionPolicy")
                        .HasColumnType("int")
                        .HasColumnName("conflict_resolution_policy");

                    b.Property<int>("ConflictTableRetentionInDays")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(30);

                    b.Property<Guid?>("HubMemberid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("hub_memberid");

                    b.Property<bool?>("Hubhasdata")
                        .HasColumnType("bit")
                        .HasColumnName("hubhasdata");

                    b.Property<DateTime?>("Lastupdatetime")
                        .HasColumnType("datetime")
                        .HasColumnName("lastupdatetime");

                    b.Property<string>("Name")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("name");

                    b.Property<string>("Ocsschemadefinition")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ocsschemadefinition");

                    b.Property<string>("SchemaDescription")
                        .HasColumnType("xml")
                        .HasColumnName("schema_description");

                    b.Property<int?>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("state");

                    b.Property<Guid?>("Subscriptionid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("subscriptionid");

                    b.Property<bool>("SyncEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("sync_enabled");

                    b.Property<int>("SyncInterval")
                        .HasColumnType("int")
                        .HasColumnName("sync_interval");

                    b.HasKey("Id")
                        .HasName("PK__syncgrou__3213E83F458EB0DA");

                    b.HasIndex("Subscriptionid");

                    b.HasIndex(new[] { "HubMemberid" }, "index_syncgroup_hub_memberid");

                    b.ToTable("syncgroup", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Syncgroupmember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("Databaseid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("databaseid");

                    b.Property<Guid?>("HubJobId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("hubJobId");

                    b.Property<int>("Hubstate")
                        .HasColumnType("int")
                        .HasColumnName("hubstate");

                    b.Property<DateTime>("HubstateLastupdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("hubstate_lastupdated")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("jobId");

                    b.Property<DateTime?>("Lastsynctime")
                        .HasColumnType("datetime")
                        .HasColumnName("lastsynctime");

                    b.Property<DateTime?>("LastsynctimeZerofailuresHub")
                        .HasColumnType("datetime")
                        .HasColumnName("lastsynctime_zerofailures_hub");

                    b.Property<DateTime?>("LastsynctimeZerofailuresMember")
                        .HasColumnType("datetime")
                        .HasColumnName("lastsynctime_zerofailures_member");

                    b.Property<bool?>("Memberhasdata")
                        .HasColumnType("bit")
                        .HasColumnName("memberhasdata");

                    b.Property<int>("Memberstate")
                        .HasColumnType("int")
                        .HasColumnName("memberstate");

                    b.Property<DateTime>("MemberstateLastupdated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("memberstate_lastupdated")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("name");

                    b.Property<bool>("Noinitsync")
                        .HasColumnType("bit")
                        .HasColumnName("noinitsync");

                    b.Property<string>("Scopename")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("scopename")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("Syncdirection")
                        .HasColumnType("int")
                        .HasColumnName("syncdirection");

                    b.Property<Guid>("Syncgroupid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("syncgroupid");

                    b.HasKey("Id")
                        .HasName("PK__syncgrou__3213E83FEED2D98F");

                    b.HasIndex(new[] { "Syncgroupid", "Databaseid" }, "IX_SyncGroupMember_SyncGroupId_DatabaseId")
                        .IsUnique();

                    b.HasIndex(new[] { "Databaseid" }, "index_syncgroupmember_databaseid");

                    b.ToTable("syncgroupmember", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.TaskModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("ActionModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Actionid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("actionid");

                    b.Property<Guid?>("Agentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("agentid");

                    b.Property<DateTime?>("CompletedTime")
                        .HasColumnType("datetime")
                        .HasColumnName("completedtime");

                    b.Property<DateTime?>("CreationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationtime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.Property<int>("DependencyCount")
                        .HasColumnType("int")
                        .HasColumnName("dependency_count");

                    b.Property<DateTime?>("LastResetTime")
                        .HasColumnType("datetime")
                        .HasColumnName("lastresettime");

                    b.Property<DateTime?>("Lastheartbeat")
                        .HasColumnType("datetime")
                        .HasColumnName("lastheartbeat");

                    b.Property<Guid?>("OwningInstanceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("owning_instanceid");

                    b.Property<DateTime?>("PickupTime")
                        .HasColumnType("datetime")
                        .HasColumnName("pickuptime");

                    b.Property<int?>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(100)
                        .HasColumnName("priority");

                    b.Property<byte[]>("Request")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("request");

                    b.Property<byte[]>("Response")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("response");

                    b.Property<int>("RetryCount")
                        .HasColumnType("int")
                        .HasColumnName("retry_count");

                    b.Property<int?>("State")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("state");

                    b.Property<long>("TaskNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("taskNumber");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TaskNumber"));

                    b.Property<int?>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.Property<long>("Version")
                        .HasColumnType("bigint")
                        .HasColumnName("version");

                    b.HasKey("Id")
                        .HasName("PK__task__3213E83FA6F54B62");

                    b.HasIndex("ActionModelId");

                    b.HasIndex(new[] { "Actionid" }, "index_task_actionid");

                    b.HasIndex(new[] { "Agentid", "State" }, "index_task_agentid_state")
                        .HasFilter("([state]=(0))");

                    b.HasIndex(new[] { "CompletedTime" }, "index_task_completedtime");

                    b.HasIndex(new[] { "State", "Agentid", "DependencyCount", "Priority", "CreationTime" }, "index_task_gettask");

                    b.HasIndex(new[] { "State", "CompletedTime" }, "index_task_state")
                        .HasFilter("([state]=(2))");

                    b.HasIndex(new[] { "Lastheartbeat", "State" }, "index_task_state_lastheartbeat")
                        .HasFilter("([state]<(0))");

                    b.ToTable("task", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.TrainingPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BreakdownCount")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CredentialsEarned")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradingRubric")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstructionalModules")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TrainingPlanLengthId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhoDelivers")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPlanLengthId");

                    b.ToTable("TrainingPlans");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.TrainingPlanBreakdown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LearningObjective")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RowId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalHours")
                        .HasColumnType("decimal(4, 2)");

                    b.Property<string>("TrainingModuleTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingPlanId")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("TrainingPlanBreakdowns");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.TrainingPlanInstructionalMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstructionalMethodId")
                        .HasColumnType("int");

                    b.Property<string>("OtherText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TrainingPlanId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstructionalMethodId");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("TrainingPlanInstructionalMethods");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.TrainingPlanLength", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TrainingPlanLengths");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Uihistory", b =>
                {
                    b.Property<Guid>("Agentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("agentid");

                    b.Property<DateTime>("CompletionTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("completionTime");

                    b.Property<Guid>("Databaseid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("databaseid");

                    b.Property<string>("DetailEnumId")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("detailEnumId");

                    b.Property<string>("DetailStringParameters")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("detailStringParameters");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool?>("IsWritable")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isWritable");

                    b.Property<int>("RecordType")
                        .HasColumnType("int")
                        .HasColumnName("recordType");

                    b.Property<Guid>("Serverid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("serverid");

                    b.Property<Guid>("SyncgroupId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("syncgroupId");

                    b.Property<int>("TaskType")
                        .HasColumnType("int")
                        .HasColumnName("taskType");

                    b.HasIndex(new[] { "Agentid" }, "Idx_UIHistory_AgentId");

                    b.HasIndex(new[] { "CompletionTime" }, "Idx_UIHistory_CompletionTime");

                    b.HasIndex(new[] { "Databaseid" }, "Idx_UIHistory_DatabaseId");

                    b.HasIndex(new[] { "Id" }, "Idx_UIHistory_Id");

                    b.HasIndex(new[] { "Serverid" }, "Idx_UIHistory_ServerId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "Serverid" }, "Idx_UIHistory_ServerId"));

                    b.HasIndex(new[] { "SyncgroupId" }, "Idx_UIHistory_SyncgroupId");

                    b.ToTable("UIHistory", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Userdatabase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("Agentid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("agentid");

                    b.Property<byte[]>("ConnectionString")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("connection_string");

                    b.Property<string>("Database")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("database");

                    b.Property<string>("DbSchema")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("db_schema");

                    b.Property<bool>("IsOnPremise")
                        .HasColumnType("bit")
                        .HasColumnName("is_on_premise");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("jobId");

                    b.Property<DateTime?>("LastSchemaUpdated")
                        .HasColumnType("datetime")
                        .HasColumnName("last_schema_updated");

                    b.Property<DateTime?>("LastTombstonecleanup")
                        .HasColumnType("datetime")
                        .HasColumnName("last_tombstonecleanup");

                    b.Property<string>("Region")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("region");

                    b.Property<string>("Server")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("server");

                    b.Property<string>("SqlazureInfo")
                        .HasColumnType("xml")
                        .HasColumnName("sqlazure_info");

                    b.Property<int>("State")
                        .HasColumnType("int")
                        .HasColumnName("state");

                    b.Property<Guid>("Subscriptionid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("subscriptionid");

                    b.HasKey("Id")
                        .HasName("PK__userdata__3213E83F9AB05994");

                    b.HasIndex("Subscriptionid");

                    b.ToTable("userdatabase", "dss");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.VChangeRequest", b =>
                {
                    b.Property<string>("Change")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Osd")
                        .HasColumnType("bit")
                        .HasColumnName("OSD");

                    b.Property<string>("Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("SubmittedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.ToTable((string)null);

                    b.ToView("vChangeRequests", (string)null);
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.VwQuestionProSummaryDatum", b =>
                {
                    b.Property<string>("DeliveryMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobFamily")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobFamilyOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpporType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgTypeOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParticPopulation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pocemail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("POCEmail");

                    b.Property<string>("Pocfirst")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("POCFirst");

                    b.Property<string>("Poclast")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("POCLast");

                    b.Property<string>("Pocphone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("POCPhone");

                    b.Property<string>("ProgDuration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicPocemail")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PublicPOCEmail");

                    b.Property<string>("PublicPocfirst")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PublicPOCFirst");

                    b.Property<string>("PublicPoclast")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PublicPOCLast");

                    b.Property<int>("ResponseId")
                        .HasColumnType("int");

                    b.Property<string>("ResponseStatus")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SpprogName")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SPProgName");

                    b.Property<string>("StatesDelivery")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatesDeliveryOther")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeStamp")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.ToTable((string)null);

                    b.ToView("vwQuestionProSummaryData", (string)null);
                });

            modelBuilder.Entity("Taskdependency", b =>
                {
                    b.Property<Guid>("Nexttaskid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("nexttaskid");

                    b.Property<Guid>("Prevtaskid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("prevtaskid");

                    b.HasKey("Nexttaskid", "Prevtaskid")
                        .HasName("PK_TaskTask");

                    b.HasIndex("Prevtaskid");

                    b.ToTable("taskdependency", "dss");
                });

            modelBuilder.Entity("AspNetUserRole", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.AspNetRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.HasOne("SkillBridgeAPI.Models.Db.AspNetUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired();
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Agent", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Subscription", "Subscription")
                        .WithMany("Agents")
                        .HasForeignKey("Subscriptionid")
                        .HasConstraintName("FK__agent__subscript");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AgentInstance", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Agent", "Agent")
                        .WithMany("AgentInstances")
                        .HasForeignKey("Agentid")
                        .IsRequired()
                        .HasConstraintName("FK__agent_ins__agent");

                    b.Navigation("Agent");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetRoleClaim", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.AspNetRole", "Role")
                        .WithMany("AspNetRoleClaims")
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetUserAuthority", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.AspNetUser", "ApplicationUser")
                        .WithMany("AspNetUserAuthorities")
                        .HasForeignKey("ApplicationUserId")
                        .IsRequired()
                        .HasConstraintName("FK_AspNetUserAuthority_UserId");

                    b.HasOne("SkillBridgeAPI.Models.Db.OrganizationModel", "OrganizationModel")
                        .WithMany("AspNetUserAuthorities")
                        .HasForeignKey("OrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK_AspNetUserAuthority_OrganizationId");

                    b.HasOne("SkillBridgeAPI.Models.Db.ProgramModel", "Program")
                        .WithMany("AspNetUserAuthorities")
                        .HasForeignKey("ProgramId")
                        .HasConstraintName("FK_AspNetUserAuthority_ProgramId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("OrganizationModel");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetUserClaim", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.AspNetUser", "User")
                        .WithMany("AspNetUserClaims")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetUserLogin", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.AspNetUser", "User")
                        .WithMany("AspNetUserLogins")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetUserToken", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.AspNetUser", "User")
                        .WithMany("AspNetUserTokens")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Entry", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.State", "State")
                        .WithMany("Entries")
                        .HasForeignKey("StateId")
                        .IsRequired()
                        .HasConstraintName("FK_Entries_StateID");

                    b.Navigation("State");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.EntryStatusTracking", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Entry", "Entry")
                        .WithMany("EntryStatusTrackings")
                        .HasForeignKey("EntryId")
                        .IsRequired()
                        .HasConstraintName("FK_EntryStatusTracking_EntryID");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FileModel", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Entry", "Entry")
                        .WithMany("Files")
                        .HasForeignKey("EntryId")
                        .IsRequired()
                        .HasConstraintName("FK_Files_EntryID");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Form", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Entry", "Entry")
                        .WithMany("Forms")
                        .HasForeignKey("EntryId")
                        .IsRequired()
                        .HasConstraintName("FK_Forms_EntryID");

                    b.HasOne("SkillBridgeAPI.Models.Db.FormTemplate", "FormTemplate")
                        .WithMany("Forms")
                        .HasForeignKey("FormTemplateId")
                        .IsRequired()
                        .HasConstraintName("FK_Forms_FormTemplateID");

                    b.Navigation("Entry");

                    b.Navigation("FormTemplate");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FormResponse", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Form", "Form")
                        .WithMany("FormResponses")
                        .HasForeignKey("FormId")
                        .IsRequired()
                        .HasConstraintName("FK_FormResponses_FormID");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FormResponseChoice", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.FormResponse", "FormResponse")
                        .WithMany("FormResponseChoices")
                        .HasForeignKey("FormResponseId")
                        .IsRequired()
                        .HasConstraintName("FK_FormResponseChoices_FormResponseID");

                    b.Navigation("FormResponse");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FormResponseFile", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.FileModel", "FileModel")
                        .WithMany("FormResponseFiles")
                        .HasForeignKey("FileId")
                        .IsRequired()
                        .HasConstraintName("FK_FormResponseFile_FileID");

                    b.HasOne("SkillBridgeAPI.Models.Db.FormResponse", "FormResponse")
                        .WithMany("FormResponseFiles")
                        .HasForeignKey("FormResponseId")
                        .IsRequired()
                        .HasConstraintName("FK_FormResponseFiles_FormResponseID");

                    b.Navigation("FileModel");

                    b.Navigation("FormResponse");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FormResponseRow", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.FormResponse", "FormResponse")
                        .WithMany("FormResponseRows")
                        .HasForeignKey("FormResponseId")
                        .IsRequired()
                        .HasConstraintName("FK_FormResponseRows_FormResponseID");

                    b.Navigation("FormResponse");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.MessageQueue", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Job", "Job")
                        .WithMany("MessageQueues")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK__MessageQu__JobId__20B7BF83");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.MouFile", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.MouModel", "MouModel")
                        .WithMany("MouFiles")
                        .HasForeignKey("MouId")
                        .IsRequired()
                        .HasConstraintName("FK_MouFiles_MouId");

                    b.Navigation("MouModel");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.OpportunityGroupModel", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.OpportunityModel", "OpportunityIdNavigation")
                        .WithMany("OpportunityGroups")
                        .HasForeignKey("OpportunityIdNavigationId");

                    b.Navigation("OpportunityIdNavigation");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.OrganizationFile", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.OrganizationModel", "OrganizationModel")
                        .WithMany("OrganizationFiles")
                        .HasForeignKey("OrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK_OrganizationFiles_OrganizationId");

                    b.Navigation("OrganizationModel");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ProgramModel", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.OrganizationModel", "OrganizationModel")
                        .WithMany("Programs")
                        .HasForeignKey("OrganizationId")
                        .IsRequired()
                        .HasConstraintName("FK_Programs_Organization_Id");

                    b.Navigation("OrganizationModel");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ProgramTrainingPlan", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.ProgramModel", "ProgramModel")
                        .WithMany("ProgramTrainingPlans")
                        .HasForeignKey("ProgramId")
                        .IsRequired()
                        .HasConstraintName("FK_ProgramTrainingPlans_ProgramId");

                    b.HasOne("SkillBridgeAPI.Models.Db.TrainingPlan", "TrainingPlan")
                        .WithMany("ProgramTrainingPlans")
                        .HasForeignKey("TrainingPlanId")
                        .IsRequired()
                        .HasConstraintName("FK_ProgramTrainingPlans_TrainingPlanId");

                    b.Navigation("ProgramModel");

                    b.Navigation("TrainingPlan");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ScheduleTask", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Syncgroup", "SyncGroup")
                        .WithOne("ScheduleTask")
                        .HasForeignKey("SkillBridgeAPI.Models.Db.ScheduleTask", "SyncGroupId")
                        .IsRequired()
                        .HasConstraintName("FK__ScheduleT__SyncG");

                    b.Navigation("SyncGroup");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ScheduleTask1", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Schedule", "ScheduleNavigation")
                        .WithMany("ScheduleTask1s")
                        .HasForeignKey("Schedule")
                        .HasConstraintName("FK__ScheduleT__Sched__2B354DF6");

                    b.Navigation("ScheduleNavigation");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Syncgroup", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Userdatabase", "HubMember")
                        .WithMany("Syncgroups")
                        .HasForeignKey("HubMemberid")
                        .HasConstraintName("FK__syncgroup__hub_m");

                    b.HasOne("SkillBridgeAPI.Models.Db.Subscription", "Subscription")
                        .WithMany("Syncgroups")
                        .HasForeignKey("Subscriptionid")
                        .HasConstraintName("FK__syncgroup__subsc");

                    b.Navigation("HubMember");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Syncgroupmember", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Userdatabase", "Database")
                        .WithMany("Syncgroupmembers")
                        .HasForeignKey("Databaseid")
                        .IsRequired()
                        .HasConstraintName("FK__syncmember__datab");

                    b.HasOne("SkillBridgeAPI.Models.Db.Syncgroup", "Syncgroup")
                        .WithMany("Syncgroupmembers")
                        .HasForeignKey("Syncgroupid")
                        .IsRequired()
                        .HasConstraintName("FK__syncmember__syncg");

                    b.Navigation("Database");

                    b.Navigation("Syncgroup");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.TaskModel", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.ActionModel", "ActionModel")
                        .WithMany("Tasks")
                        .HasForeignKey("ActionModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionModel");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.TrainingPlan", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.TrainingPlanLength", "TrainingPlanLength")
                        .WithMany("TrainingPlans")
                        .HasForeignKey("TrainingPlanLengthId")
                        .IsRequired()
                        .HasConstraintName("FK_TrainingPlans_TrainingPlanLengthId");

                    b.Navigation("TrainingPlanLength");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.TrainingPlanBreakdown", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.TrainingPlan", "TrainingPlan")
                        .WithMany("TrainingPlanBreakdowns")
                        .HasForeignKey("TrainingPlanId")
                        .IsRequired()
                        .HasConstraintName("FK_TrainingPlanBreakdowns_TrainingPlanId");

                    b.Navigation("TrainingPlan");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.TrainingPlanInstructionalMethod", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.InstructionalMethod", "InstructionalMethod")
                        .WithMany("TrainingPlanInstructionalMethods")
                        .HasForeignKey("InstructionalMethodId")
                        .IsRequired()
                        .HasConstraintName("FK_TrainingPlanInstructionalMethods_InstructionalMethodId");

                    b.HasOne("SkillBridgeAPI.Models.Db.TrainingPlan", "TrainingPlan")
                        .WithMany("TrainingPlanInstructionalMethods")
                        .HasForeignKey("TrainingPlanId")
                        .IsRequired()
                        .HasConstraintName("FK_TrainingPlanInstructionalMethods_TrainingPlanId");

                    b.Navigation("InstructionalMethod");

                    b.Navigation("TrainingPlan");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Userdatabase", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.Subscription", "Subscription")
                        .WithMany("Userdatabases")
                        .HasForeignKey("Subscriptionid")
                        .IsRequired()
                        .HasConstraintName("FK__userdatab__subsc");

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("Taskdependency", b =>
                {
                    b.HasOne("SkillBridgeAPI.Models.Db.TaskModel", null)
                        .WithMany()
                        .HasForeignKey("Nexttaskid")
                        .IsRequired()
                        .HasConstraintName("FK__taskdepen__nextt");

                    b.HasOne("SkillBridgeAPI.Models.Db.TaskModel", null)
                        .WithMany()
                        .HasForeignKey("Prevtaskid")
                        .IsRequired()
                        .HasConstraintName("FK__taskdepen__prevt");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ActionModel", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Agent", b =>
                {
                    b.Navigation("AgentInstances");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetRole", b =>
                {
                    b.Navigation("AspNetRoleClaims");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.AspNetUser", b =>
                {
                    b.Navigation("AspNetUserAuthorities");

                    b.Navigation("AspNetUserClaims");

                    b.Navigation("AspNetUserLogins");

                    b.Navigation("AspNetUserTokens");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Entry", b =>
                {
                    b.Navigation("EntryStatusTrackings");

                    b.Navigation("Files");

                    b.Navigation("Forms");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FileModel", b =>
                {
                    b.Navigation("FormResponseFiles");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Form", b =>
                {
                    b.Navigation("FormResponses");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FormResponse", b =>
                {
                    b.Navigation("FormResponseChoices");

                    b.Navigation("FormResponseFiles");

                    b.Navigation("FormResponseRows");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.FormTemplate", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.InstructionalMethod", b =>
                {
                    b.Navigation("TrainingPlanInstructionalMethods");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Job", b =>
                {
                    b.Navigation("MessageQueues");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.MouModel", b =>
                {
                    b.Navigation("MouFiles");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.OpportunityModel", b =>
                {
                    b.Navigation("OpportunityGroups");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.OrganizationModel", b =>
                {
                    b.Navigation("AspNetUserAuthorities");

                    b.Navigation("OrganizationFiles");

                    b.Navigation("Programs");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.ProgramModel", b =>
                {
                    b.Navigation("AspNetUserAuthorities");

                    b.Navigation("ProgramTrainingPlans");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Schedule", b =>
                {
                    b.Navigation("ScheduleTask1s");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.State", b =>
                {
                    b.Navigation("Entries");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Subscription", b =>
                {
                    b.Navigation("Agents");

                    b.Navigation("Syncgroups");

                    b.Navigation("Userdatabases");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Syncgroup", b =>
                {
                    b.Navigation("ScheduleTask");

                    b.Navigation("Syncgroupmembers");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.TrainingPlan", b =>
                {
                    b.Navigation("ProgramTrainingPlans");

                    b.Navigation("TrainingPlanBreakdowns");

                    b.Navigation("TrainingPlanInstructionalMethods");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.TrainingPlanLength", b =>
                {
                    b.Navigation("TrainingPlans");
                });

            modelBuilder.Entity("SkillBridgeAPI.Models.Db.Userdatabase", b =>
                {
                    b.Navigation("Syncgroupmembers");

                    b.Navigation("Syncgroups");
                });
#pragma warning restore 612, 618
        }
    }
}
